---
import type { RichText, Block, Footnote } from "@/lib/interfaces";
import { adjustedFootnotesConfig } from "@/lib/notion/client";
import { numberToAlphabet } from "@/utils/numbering";
import FootnoteContent from "@/components/notion-blocks/FootnoteContent.astro";

export interface Props {
	richText: RichText;
	block: Block;
}

const { richText, block } = Astro.props;

// Get footnote configuration
const config = adjustedFootnotesConfig?.["in-page-footnotes-settings"];

// Determine display mode
const isMarginMode = config?.["show-in-margin-on-large-screens"] === true;

// Get the footnote marker reference (e.g., "ft_a")
const footnoteRef = richText.FootnoteRef;

// Find the corresponding footnote in block.Footnotes
let footnote: Footnote | undefined = undefined;
if (block.Footnotes && footnoteRef) {
	footnote = block.Footnotes.find((fn) => fn.Marker === footnoteRef);
}

// Generate unique ID for this footnote marker
const uniqueId = `footnote-${block.Id}-${footnoteRef}`;

// Determine what symbol to display:
// - Use † ONLY when isMarginMode is false AND generate-footnotes-section is false
// - Otherwise use sequential numbers [1], [2], etc.
const generateSection = config?.["generate-footnotes-section"];
const useNumbering = generateSection || isMarginMode;
const displaySymbol =
	useNumbering && footnote?.Index ? `[${numberToAlphabet(footnote.Index)}]` : "[†]";
---

{/* If no footnote content found, render as muted text (broken reference) */}
{
	!footnote ? (
		<span class="footnote-marker-broken text-textColor/70" title="Footnote content not found">
			{richText.PlainText}
		</span>
	) : (
		<>
			{/* Render footnote marker with appropriate attributes for popover or margin mode */}
			{isMarginMode ? (
				<span class="text-link decoration-accent-2/40 underline decoration-dotted underline-offset-2">
					<span
						data-margin-note={uniqueId}
						data-popover-target={`popover-description-${uniqueId}`}
						data-popover-placement="bottom-end"
						class="text-quote cursor-pointer align-super font-mono text-xs"
						aria-label="Show information for the linked content"
					>
						{displaySymbol}
					</span>
				</span>
			) : (
				<span class="text-link decoration-accent-2/40 underline decoration-dotted underline-offset-2">
					<span
						data-popover-target={`popover-description-${uniqueId}`}
						data-popover-placement="bottom-end"
						class="text-quote cursor-pointer align-super font-mono text-xs"
						aria-label="Show information for the linked content"
					>
						{displaySymbol}
					</span>
				</span>
			)}

			{/* Template for popover content */}
			<template id={`template-popover-description-${uniqueId}`}>
				<div
					data-popover
					id={`popover-description-${uniqueId}`}
					role="tooltip"
					class="popoverEl border-accent-2/20 bg-popover-bg/95 text-textColor/80 invisible absolute z-40 hidden inline-block w-72 rounded-lg border text-sm opacity-0 shadow-xs backdrop-blur-sm transition-opacity duration-300"
				>
					<div class="space-y-2 p-3">
						<FootnoteContent content={footnote.Content} sourceBlockId={block.Id} />
						<span data-popover-link>{""}</span>
					</div>
				</div>
			</template>

			{/* Template for margin notes content (same structure, used by margin notes script) */}
			{isMarginMode && (
				<template id={`template-margin-${uniqueId}`}>
					<div class="text-sm!">
						<span class="text-quote align-super font-mono text-xs!">{displaySymbol}</span>{" "}
						<FootnoteContent content={footnote.Content} sourceBlockId={block.Id} />
					</div>
				</template>
			)}
		</>
	)
}
